{"version":3,"sources":["components/Card.js","components/CardContainer.js","components/DetailModal.js","components/Header.js","components/Search.js","App.js","index.js"],"names":["Card","show","setSelectedShow","selectedShow","setModalVisible","posterUrl","console","log","image","medium","className","onClick","src","alt","name","CardContainer","searchResult","id","map","DetailModal","modalVisible","selectedShowEpisodes","showName","summary","episodeLabels","episode","Object","keys","episodeValues","values","undefined","data","labels","datasets","label","fill","backgroundColor","borderColor","dangerouslySetInnerHTML","__html","options","scales","y","beginAtZero","Header","Search","searchQuery","submitNewSearch","currentSearchTerm","onSubmit","event","preventDefault","for","onChange","target","value","type","App","useState","setSearchQuery","setSearchResult","setSelectedShowEpisodes","searchFetchRequest","a","fetch","response","json","jsonResponse","length","slice","useEffect","getEpisodesForSelectedShow","allEpisodesData","number","season","average","rating","key","newSearchTerm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5a97944.chunk.js","sourcesContent":["function Card({ show, selectedShow, setSelectedShow, setModalVisible }) {\r\n  let posterUrl = '';\r\n  console.log(show);\r\n  if (show.image !== null) {\r\n    posterUrl = show.image.medium;\r\n  } else {\r\n    posterUrl =\r\n      'https://via.placeholder.com/210x295/fff.png?text=Image+not+found';\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className='card'\r\n      onClick={() => {\r\n        setSelectedShow(show);\r\n        setModalVisible('modal-visible');\r\n      }}\r\n    >\r\n      <img className={'poster'} src={posterUrl} alt={`${show.name} poster`} />\r\n      <h4 className={'showName'}>{show.name}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import Card from './Card';\r\n\r\nfunction CardContainer({\r\n  searchResult,\r\n  selectedShow,\r\n  setSelectedShow,\r\n  setModalVisible,\r\n}) {\r\n  return (\r\n    <section id='searchResultSection'>\r\n      {searchResult.map(({ show }) => {\r\n        return (\r\n          <Card\r\n            key={show.id}\r\n            show={show}\r\n            selectedShow={selectedShow}\r\n            setSelectedShow={setSelectedShow}\r\n            setModalVisible={setModalVisible}\r\n          />\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CardContainer;\r\n","import { Line } from 'react-chartjs-2';\r\n\r\nfunction DetailModal({\r\n  modalVisible,\r\n  selectedShow,\r\n  selectedShowEpisodes,\r\n  setModalVisible,\r\n}) {\r\n  const { name: showName, summary, image } = selectedShow;\r\n\r\n  const episodeLabels = selectedShowEpisodes.map((episode) => {\r\n    return Object.keys(episode)[0];\r\n  });\r\n  const episodeValues = selectedShowEpisodes.map((episode) => {\r\n    return Object.values(episode)[0];\r\n  });\r\n\r\n  let posterUrl =\r\n    'https://via.placeholder.com/210x295/fff.png?text=Image+not+found';\r\n\r\n  if (image !== null && image !== undefined) {\r\n    posterUrl = image.medium;\r\n  } else {\r\n    posterUrl =\r\n      'https://via.placeholder.com/210x295/fff.png?text=Image+not+found';\r\n  }\r\n\r\n  let data = {\r\n    labels: episodeLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Average Episode Rating',\r\n        data: episodeValues,\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  console.log(data);\r\n  let options = {\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <section className={modalVisible} id='detail-section'>\r\n      {/* <button\r\n        id='close-detail-button'\r\n        onClick={() => {\r\n          setModalVisible('modal-hidden');\r\n        }}\r\n      >\r\n        X\r\n      </button> */}\r\n      <h3 id='show-title'>{showName}</h3>\r\n      {/* <p id='show-blurb'>{summary}</p> */}\r\n      {/* {console.log(JSON.parse(summary))} */}\r\n      <div id='blurb-container' dangerouslySetInnerHTML={{ __html: summary }} />\r\n      <img id='show-poster' src={posterUrl} alt='' />\r\n\r\n      <Line data={data} options={options} />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default DetailModal;\r\n","function Header() {\r\n  return (\r\n    <div className='Header'>\r\n      <h1>TV Ratings</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","function Search({ searchQuery, submitNewSearch }) {\r\n  let currentSearchTerm = '';\r\n\r\n  return (\r\n    <section id='search-section'>\r\n      <form\r\n        id='search-form'\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          submitNewSearch(currentSearchTerm);\r\n        }}\r\n      >\r\n        <label for='search-input' id='search-label'>\r\n          Search\r\n        </label>\r\n        <input\r\n          id='search-input'\r\n          onChange={(event) => {\r\n            currentSearchTerm = event.target.value;\r\n          }}\r\n        />\r\n        <button type='submit' id='search-button'>\r\n          Go\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { useEffect, useState } from 'react';\r\nimport CardContainer from './components/CardContainer';\r\nimport DetailModal from './components/DetailModal';\r\nimport Header from './components/Header';\r\nimport Search from './components/Search';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResult, setSearchResult] = useState([]);\r\n  const [selectedShow, setSelectedShow] = useState({});\r\n  const [selectedShowEpisodes, setSelectedShowEpisodes] = useState([]);\r\n  const [modalVisible, setModalVisible] = useState('modal-hidden');\r\n\r\n  const searchRoot = 'https://api.tvmaze.com/search/shows';\r\n  const episodesRoot = 'https://api.tvmaze.com/shows';\r\n\r\n  const searchFetchRequest = async () => {\r\n    try {\r\n      const response = await fetch(`${searchRoot}?q=${searchQuery}`);\r\n      const jsonResponse = await response.json();\r\n\r\n      if (jsonResponse.length > 10) {\r\n        setSearchResult(jsonResponse.slice(0, 9));\r\n      } else {\r\n        setSearchResult(jsonResponse);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    searchFetchRequest();\r\n  }, [searchQuery]);\r\n\r\n  const submitNewSearch = (newSearchTerm) => {\r\n    setSearchQuery(() => {\r\n      return newSearchTerm;\r\n    });\r\n  };\r\n\r\n  const getEpisodesForSelectedShow = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${episodesRoot}/${selectedShow.id}/episodes`\r\n      );\r\n      const jsonResponse = await response.json();\r\n\r\n      let allEpisodesData = jsonResponse.map(\r\n        ({ number, season, rating: { average } }) => {\r\n          if (average === null || average === undefined) {\r\n            average = 0.0;\r\n          }\r\n          const key = `s${season}e${number}`;\r\n          return { [key]: average };\r\n        }\r\n      );\r\n      setSelectedShowEpisodes(allEpisodesData);\r\n      console.log(allEpisodesData);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getEpisodesForSelectedShow();\r\n  }, [selectedShow]);\r\n\r\n  return (\r\n    <div className='App'>\r\n      <Header></Header>\r\n      <Search\r\n        searchQuery={searchQuery}\r\n        submitNewSearch={submitNewSearch}\r\n      ></Search>\r\n      <CardContainer\r\n        searchResult={searchResult}\r\n        selectedShow={selectedShow}\r\n        setSelectedShow={setSelectedShow}\r\n        setModalVisible={setModalVisible}\r\n      />\r\n      <DetailModal\r\n        selectedShow={selectedShow}\r\n        selectedShowEpisodes={selectedShowEpisodes}\r\n        modalVisible={modalVisible}\r\n        setModalVisible={setModalVisible}\r\n      ></DetailModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}